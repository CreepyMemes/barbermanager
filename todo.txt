
What to implement:

1. for backend:
- continua ad implementare gli API endpoint su README.md
...

2. for architecture:
- una volta finita la parte backend correggi i diagrammi di casi d'uso
- rifai i diagrammi di classi di analisi
- correggi i diagrammi di sequenza e i rispettivi di attivita
- fai i diagrammi di classi di progettazione
...


3. for frontend:
- register page,
- login page,
- verify-email send GET request to verify then redirect to login page,

- reset password button in login/register pages
- reset password page

- client, barber and admin pages
- logout button
- add barber in admin user page
...



# Workflow for Development
- Use `docker-compose -f docker-compose.dev.yml up --build`
- Code live reload works (because of volumes)
- Access frontend on `localhost:3000`, backend on `localhost:8000`
- Stop containers with `docker-compose -f docker-compose.dev.yml down`

docker-compose -f docker-compose.dev.yml exec backend sh



# Workflow for Production
- SSH into your SBC or server
- Pull latest code from GitHub `cd ~/babrbermanager && git pull`
- Build and run containers: `docker-compose -f docker-compose.prod.yml up -d --build`
