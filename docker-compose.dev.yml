services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=mydb
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
    ports:
      - '5432:5432' # Exposed for DBeaver database analysis

  redis:
    image: redis:7
    ports:
      - '6379:6379'

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app
    ports:
      - '8000:8000'
    env_file:
      - ./backend/.env.dev
      - ./backend/.env.local
    environment:
      - RUN_MIGRATIONS=1
    depends_on:
      - db
      - redis

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    command: celery -A config worker -l info
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env.dev
      - ./backend/.env.local
    depends_on:
      - db
      - redis

  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    command: celery -A config beat -l info
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env.dev
      - ./backend/.env.local
    depends_on:
      - db
      - redis

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    command: npm run dev -- --host
    volumes:
      - ./frontend:/app
      - /app/node_modules # Doing this unsyncs node_modules folder from host machine
    ports:
      - '3000:5173'

volumes:
  postgres_data:
